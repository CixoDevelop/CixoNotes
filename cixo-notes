#!/usr/bin/env python3

'''
						######--------------CixoNotes--------------#####

	Jezeli nie przeczytales readme.md nadrob je
	To glowny modul aplikacji CixoNotes, odpowiada za interpretacje lini polecen
'''

#moduly
from datetime import datetime
from pathlib import Path
import cixo_notes, sys

if cixo_notes.config is None:
	print(cixo_notes.language.get("cixo-notes","NOT_CONFIG_FILE"))
	exit()


cixo_notes.notes_class.set_config(cixo_notes.config, cixo_notes.language)

#domyslne parametry skryptu
read_write_mod = "read"

notes = cixo_notes.notes_saver()
notes.notes.set_date(datetime.now(), False)

#analiza lini komend
for arg_number in range(len(sys.argv)):
	
	if sys.argv[arg_number] in ("--help", "-h"):
		print(cixo_notes.language.get("cixo-notes", "HELP_NOTE").replace("||", "\n").replace("**", "\t"))
		exit()
	
	if sys.argv[arg_number] in ("--day", "-d"):
		try:
			notes.notes.set_date(sys.argv[arg_number + 1])
		except:
			if arg_number + 1 == len(sys.argv):
				print(cixo_notes.language.get("cixo-notes", "NOT_DATE_SET"))
				exit()
				
			print(cixo_notes.language.get("cixo-notes", "BAD_DATE_FORMAT").format(date_format = sys.argv[arg_number + 1]))
			exit()
			
	if sys.argv[arg_number] in ("--mode", "-m"):
		if arg_number + 1 == len(sys.argv):
			print(cixo_notes.language.get("cixo-notes", "NOT_MODE_SET"))
			exit()
			
		read_write_mod = sys.argv[arg_number + 1]	

#odczyt notatki z systemu plikow		
notes.set_path()
notes.read_notes()	
		
#wybrana przez usera akcja	
if read_write_mod == "read":
	notes.notes.display()
	exit()

if read_write_mod == "write":
	notes.write_notes()
	exit()
	
if read_write_mod == "add":
	notes.add_to_notes()
	exit()
	
if read_write_mod == "drop":
	notes.drop_notes()
	exit()
	
print(cixo_notes.language.get("cixo-notes", "BAD_MODE_ERROR").format(mode_input = read_write_mod))
	

